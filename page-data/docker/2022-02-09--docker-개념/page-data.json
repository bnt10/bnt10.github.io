{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/2022-02-09--docker-개념/","result":{"data":{"site":{"siteMetadata":{"title":"주 1회 작성하는 개발 블로그","author":"[JinhyeongKim]","siteUrl":"https://bnt10.github.io","comment":{"disqusShortName":"bnt10-github-io","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"46f131a6-68b8-59bc-9285-40fc809ba689","excerpt":"1. Docker 기술 개념 도커에 대해서 공부를 시작하면서 제일 먼저 접하는 단어는 컨테이너 입니다.\n컨테이너이란 무엇인지 살펴보겠습니다. 컨테이너(Container) 컨테이너(Container)는 운영체제 수준에서 다른 실행환경과의 간섭없이 격리하는 기술을 말합니다. 컨테이너를 위와 같이 정의한다면 또 다른 가상환경 기술인 가상머신(Virtual Machine…","html":"<h3 id=\"1-docker-기술-개념\" style=\"position:relative;\"><a href=\"#1-docker-%EA%B8%B0%EC%88%A0-%EA%B0%9C%EB%85%90\" aria-label=\"1 docker 기술 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Docker 기술 개념</h3>\n<p>도커에 대해서 공부를 시작하면서 제일 먼저 접하는 단어는 컨테이너 입니다.\n컨테이너이란 무엇인지 살펴보겠습니다.</p>\n<h4 id=\"컨테이너container\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88container\" aria-label=\"컨테이너container permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너(Container)</h4>\n<p><strong>컨테이너(Container)</strong>는 운영체제 수준에서 다른 실행환경과의 간섭없이 격리하는 기술을 말합니다.<br>\n컨테이너를 위와 같이 정의한다면 또 다른 가상환경 기술인 <strong>가상머신(Virtual Machine)</strong>에 대해서 이야기하는 것을 확인 할 수 있습니다.<br>\n둘다 가상화하여 격리된 환경을 제공해주기 때문에 보통 둘의 차이점에 대해서 설명합니다. </p>\n<p>제가 공부하면서 가장 큰 차이점으로 생각된 부분은<br>\n<strong>‘어디까지를 가상화 하는가?’</strong> 였습니다.<br>\n컨테이너의 경우 운영체제의 커널을 공유하여 그 위에 격리환경을 구성합니다.\n가상머신의 경우 하드웨어조차도 가상화시켜 격리환경을 구성합니다.</p>\n<p>두 차이점 때문에 일반적으로 컨테이너가 낮은 오버헤드 환경을 제공합니다.<br>\n다만 그렇다면 <strong>‘가상머신은 사용할 필요가 없는가?’</strong> 라는 생각을 하게 되었습니다.   </p>\n<p>찾아본 가상머신의 활용상황은 가상화를 하드웨어까지 하기 때문에\n개발상 하드웨어 요구 사항이 있거나 Windows, MacOS등 서로 호환성이\n부족한 플랫폼 개발에는 VM통한 가상화가 적합하다고 생각하게 되었습니다.</p>\n<h4 id=\"이미지image\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80image\" aria-label=\"이미지image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지(Image)</h4>\n<p>공부하면서 이해한 도커의 이미지의 개념은 일종의 객체지향의 클래스라고 생각되었습니다.<br>\n이미지라는 클래스를 통해서 컨테이러나는 객체를 만드는 것이라 가정하면<br>\n이미지는 컨테이너 생성을 위한 파일, 설정등을 포함하고 상태값을 가지지않는<br>\nImutable상태로 저장되기 때문입니다.  </p>\n<p>또한 같은 이미지는 여러개의 컨테이너를 생성할 수 있고 컨테이너의 상태의 변경은<br>\n컨테이너에만 적용되고 이미지에는 적용되지 않습니다. </p>\n<p>이미지의 구성은 N층의 레이어를 통해 구성됩니다.<br>\n예를 들어서 base가 되는 Ubuntu 레이어 위에 Nginx layer를 올리는 방식으로<br>\nN층의 레이어 구성을 통해서 하나의 이미지가 구성됩니다.  </p>\n<p>실제 이미지를 만드는 방법은 다음과 같습니다.</p>\n<p><strong>Dockerfile</strong>이란 파일을 작성하여 <strong>Build</strong>하는 과정이 필요합니다.<br>\n참고 : <a href=\"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/\">자세한 작성가이드 입니다.</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">FROM</span> <span class=\"token literal-property property\">ubuntu</span><span class=\"token operator\">:</span><span class=\"token number\">18.04</span>\n<span class=\"token constant\">COPY</span> <span class=\"token punctuation\">.</span> <span class=\"token operator\">/</span>app\n<span class=\"token constant\">RUN</span> make <span class=\"token operator\">/</span>app\n<span class=\"token constant\">CMD</span> python <span class=\"token operator\">/</span>app<span class=\"token operator\">/</span>app<span class=\"token punctuation\">.</span>py</code></pre></div>\n<h1 id=\"계속\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%86%8D\" aria-label=\"계속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계속</h1>","tableOfContents":"<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>\n<p><a href=\"/docker/2022-02-09--docker-%EA%B0%9C%EB%85%90/#1-docker-%EA%B8%B0%EC%88%A0-%EA%B0%9C%EB%85%90\">1. Docker 기술 개념</a></p>\n<ul>\n<li><a href=\"/docker/2022-02-09--docker-%EA%B0%9C%EB%85%90/#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88container\">컨테이너(Container)</a></li>\n<li><a href=\"/docker/2022-02-09--docker-%EA%B0%9C%EB%85%90/#%EC%9D%B4%EB%AF%B8%EC%A7%80image\">이미지(Image)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/docker/2022-02-09--docker-%EA%B0%9C%EB%85%90/#%EA%B3%84%EC%86%8D\">계속</a></li>\n</ul>","frontmatter":{"title":"Docker - 설치부터(2)","date":"February 08, 2022"}}},"pageContext":{"slug":"/docker/2022-02-09--docker-개념/","previous":{"fields":{"slug":"/python/2022-02-07--python-singleton/"},"frontmatter":{"title":"Python - Singleton class"}},"next":{"fields":{"slug":"/docker/2022-02-08--docker-설치/"},"frontmatter":{"title":"Docker - 설치부터(1)"}}}},"staticQueryHashes":["2486386679","3128451518"]}