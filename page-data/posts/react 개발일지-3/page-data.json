{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/react 개발일지-3","result":{"data":{"markdownRemark":{"id":"83f779be-60d8-5375-89ed-5025c8556204","html":"<h2 id=\"목차\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%B0%A8\" aria-label=\"목차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목차</h2>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%84%A4%EC%B9%98\">설치</a></li>\n<li><a href=\"#%EA%B5%AC%EC%84%B1\">구성</a></li>\n<li><a href=\"#rootreducer-%EC%9E%91%EC%84%B1\">rootReducer 작성</a></li>\n<li><a href=\"#hooks-%EC%9E%91%EC%84%B1\">Hooks 작성</a></li>\n<li><a href=\"#configurestore-%EC%9E%91%EC%84%B1\">configureStore 작성</a></li>\n<li><a href=\"#%EB%A6%AC%EB%93%80%EC%84%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-counterslicets\">리듀서 작성하기 (counterSlice.ts)</a></li>\n<li><a href=\"#_appts%EC%97%90-redux-store-%EC%A0%81%EC%9A%A9\">_app.ts에 redux store 적용</a></li>\n<li><a href=\"#%EB%8F%99%EC%9E%91%ED%99%95%EC%9D%B8-component-%EC%9E%91%EC%84%B1\">동작확인 component 작성</a></li>\n</ul>\n</div>\n<h4 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h4>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`npm install @reduxjs/toolkit react-redux\nnpm install @types/react-redux`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">npm install @reduxjs/toolkit react-redux\nnpm install @types/react-redux</code>\n        </deckgo-highlight-code>\n<h4 id=\"구성\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%84%B1\" aria-label=\"구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구성</h4>\n<p>Nextjs, Typescript, ReduxToolkit를 조합하여\nRedux를 구성하기\n이번에는 ReduxToolkit을 기준으로 하여 구성해보기로 한다.</p>\n<h4 id=\"rootreducer-작성\" style=\"position:relative;\"><a href=\"#rootreducer-%EC%9E%91%EC%84%B1\" aria-label=\"rootreducer 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>rootReducer 작성</h4>\n<p>reducer를 통합할 rootReducer 작성</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// /src/store/modules/index.ts\nimport { combineReducers, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterSlice from &quot;./counter/counterSlice&quot;;\n\n//configureStore 넘겨줄 rootReucer 작성\nconst rootReducer = combineReducers({\n    counterSlice\n})\n\n//사용할 타입 정의\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n    ReturnType,\n    RootState,\n    unknown,\n    Action<string>\n>;\nexport default rootReducer;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">// /src/store/modules/index.ts\nimport { combineReducers, ThunkAction, Action } from &#39;@reduxjs/toolkit&#39;;\nimport counterSlice from &quot;./counter/counterSlice&quot;;\n\n//configureStore 넘겨줄 rootReucer 작성\nconst rootReducer = combineReducers({\n    counterSlice\n})\n\n//사용할 타입 정의\nexport type RootState = ReturnType&lt;typeof rootReducer&gt;;\nexport type AppThunk&lt;ReturnType = void&gt; = ThunkAction&lt;\n    ReturnType,\n    RootState,\n    unknown,\n    Action&lt;string&gt;\n&gt;;\nexport default rootReducer;</code>\n        </deckgo-highlight-code>\n<h4 id=\"hooks-작성\" style=\"position:relative;\"><a href=\"#hooks-%EC%9E%91%EC%84%B1\" aria-label=\"hooks 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hooks 작성</h4>\n<p>useAppDispatch , useAppSelector Hook 작성<br>\n작성하는 이유는 useSelector의 타입을 예를 들어서 useSelector(state:RootState)를\n반복적으로 작성하는 것을 피하기 위해서\nuseAppDispatch를 작성하는 이유도 마찬가지다</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// /src/hooks/index.ts\nimport {\n    TypedUseSelectorHook,\n    useDispatch,\n    useSelector,\n} from 'react-redux';\nimport { RootState } from 'src/store/modules';\nimport type {\n    AppDispatch,\n} from 'src/store';\n\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">// /src/hooks/index.ts\nimport {\n    TypedUseSelectorHook,\n    useDispatch,\n    useSelector,\n} from &#39;react-redux&#39;;\nimport { RootState } from &#39;src/store/modules&#39;;\nimport type {\n    AppDispatch,\n} from &#39;src/store&#39;;\n\n\nexport const useAppDispatch = () =&gt; useDispatch&lt;AppDispatch&gt;()\nexport const useAppSelector: TypedUseSelectorHook&lt;RootState&gt; = useSelector;</code>\n        </deckgo-highlight-code>\n<h4 id=\"configurestore-작성\" style=\"position:relative;\"><a href=\"#configurestore-%EC%9E%91%EC%84%B1\" aria-label=\"configurestore 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>configureStore 작성</h4>\n<p>redux의 설정을 관리할 configureStore를 작성한다</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// src/store/index.ts\nimport {\n    configureStore,\n} from '@reduxjs/toolkit';\n\nimport rootReducer from './modules';\nimport logger from 'redux-logger';\nimport { Context, createWrapper } from &quot;next-redux-wrapper&quot;;\n\n//redux store config\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});\n\n//dispatch type\nexport type AppDispatch = typeof store.dispatch;\n\n//next-js redux wrapper 작성\nconst wrapper = createWrapper((context: Context) => store, { debug: process.env.NODE_ENV !== 'production', });\n\nexport default wrapper;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">// src/store/index.ts\nimport {\n    configureStore,\n} from &#39;@reduxjs/toolkit&#39;;\n\nimport rootReducer from &#39;./modules&#39;;\nimport logger from &#39;redux-logger&#39;;\nimport { Context, createWrapper } from &quot;next-redux-wrapper&quot;;\n\n//redux store config\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) =&gt; getDefaultMiddleware().concat(logger),\n});\n\n//dispatch type\nexport type AppDispatch = typeof store.dispatch;\n\n//next-js redux wrapper 작성\nconst wrapper = createWrapper((context: Context) =&gt; store, { debug: process.env.NODE_ENV !== &#39;production&#39;, });\n\nexport default wrapper;</code>\n        </deckgo-highlight-code>\n<h4 id=\"리듀서-작성하기-counterslicets\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%93%80%EC%84%9C-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0-counterslicets\" aria-label=\"리듀서 작성하기 counterslicets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리듀서 작성하기 (counterSlice.ts)</h4>\n<p>리듀서의 작동을 확인 하기 위한 간단한 카운터를 작성해본다.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import {\n    createSlice,\n    PayloadAction,\n} from '@reduxjs/toolkit';\nimport { RootState } from '..';\n\n//counterState 타입 정의\nexport type CounterState = {\n    value: number;\n};\n\nconst initialState: CounterState = {\n    value: 0,\n};\n\nexport const counterSlice = createSlice({\n    //생성된 액션타입의 네임스페이스로 사용된다.\n    name: 'counter',\n    //초기 State값으로 전달된 initalState에서 CounterState타입을 유추한다.\n    initialState,\n    reducers: {\n        //리덕스의 actionCreator\n        increment: (state: CounterState) => {\n            state.value++;\n        },\n        decrement: (state: CounterState) => {\n            state.value--;\n        },\n        //payload 추가하는 경우 타입지정 예시\n        incrementByAmount: (state: CounterState, action: PayloadAction<number>) => {\n            state.value += action.payload;\n        },\n    },\n});\n// 작성한 타입을 export\nexport const {\n    increment,\n    decrement,\n    incrementByAmount,\n} = counterSlice.actions;\n\n// selector 작성 \nexport const selectCount = (state: RootState) => state.counterSlice.value;\n\nconst counterReducer = counterSlice.reducer;\nexport default counterReducer;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">import {\n    createSlice,\n    PayloadAction,\n} from &#39;@reduxjs/toolkit&#39;;\nimport { RootState } from &#39;..&#39;;\n\n//counterState 타입 정의\nexport type CounterState = {\n    value: number;\n};\n\nconst initialState: CounterState = {\n    value: 0,\n};\n\nexport const counterSlice = createSlice({\n    //생성된 액션타입의 네임스페이스로 사용된다.\n    name: &#39;counter&#39;,\n    //초기 State값으로 전달된 initalState에서 CounterState타입을 유추한다.\n    initialState,\n    reducers: {\n        //리덕스의 actionCreator\n        increment: (state: CounterState) =&gt; {\n            state.value++;\n        },\n        decrement: (state: CounterState) =&gt; {\n            state.value--;\n        },\n        //payload 추가하는 경우 타입지정 예시\n        incrementByAmount: (state: CounterState, action: PayloadAction&lt;number&gt;) =&gt; {\n            state.value += action.payload;\n        },\n    },\n});\n// 작성한 타입을 export\nexport const {\n    increment,\n    decrement,\n    incrementByAmount,\n} = counterSlice.actions;\n\n// selector 작성 \nexport const selectCount = (state: RootState) =&gt; state.counterSlice.value;\n\nconst counterReducer = counterSlice.reducer;\nexport default counterReducer;</code>\n        </deckgo-highlight-code>\n<h4 id=\"_appts에-redux-store-적용\" style=\"position:relative;\"><a href=\"#_appts%EC%97%90-redux-store-%EC%A0%81%EC%9A%A9\" aria-label=\"_appts에 redux store 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>_app.ts에 redux store 적용</h4>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// /src/pages/_app.ts\n\nimport { AppProps } from 'next/app'\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from 'src/styles/theme';\nimport GlobalStyle from 'src/styles/global-styles';\nimport wrapper from '../store';\n\nconst MyApp = ({ Component, pageProps }: AppProps) => {\n  return (\n\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Component {...pageProps} />\n    </ThemeProvider>\n\n  )\n}\n//리덕스로 감싸기\nexport default wrapper.withRedux(MyApp)`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">// /src/pages/_app.ts\n\nimport { AppProps } from &#39;next/app&#39;\nimport { ThemeProvider } from &#39;styled-components&#39;;\nimport { theme } from &#39;src/styles/theme&#39;;\nimport GlobalStyle from &#39;src/styles/global-styles&#39;;\nimport wrapper from &#39;../store&#39;;\n\nconst MyApp = ({ Component, pageProps }: AppProps) =&gt; {\n  return (\n\n    &lt;ThemeProvider theme={theme}&gt;\n      &lt;GlobalStyle /&gt;\n      &lt;Component {...pageProps} /&gt;\n    &lt;/ThemeProvider&gt;\n\n  )\n}\n//리덕스로 감싸기\nexport default wrapper.withRedux(MyApp)</code>\n        </deckgo-highlight-code>\n<h4 id=\"동작확인-component-작성\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EC%9E%91%ED%99%95%EC%9D%B8-component-%EC%9E%91%EC%84%B1\" aria-label=\"동작확인 component 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동작확인 component 작성</h4>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"\"\n              data-toaster-class=\"gatsby-code-button-toaster\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text\"\n              data-toaster-text=\"\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// /src/pages/index.ts\nimport { useState } from 'react';\nimport {\n    useAppDispatch,\n    useAppSelector,\n} from 'src/hooks';\nimport {\n    decrement,\n    increment,\n    incrementByAmount,\n    selectCount,\n} from 'src/store/modules/counter/counterSlice';\n\n\nconst IndexPage: React.FC = () => {\n    const dispatch = useAppDispatch();\n    const count = useAppSelector(selectCount);\n    const [incrementAmount, setIncrementAmount] = useState<number>(0);\n\n    return (\n        <>\n            <h1>Redux Counter</h1>\n            <h2>\n                숫자 : {count}\n            </h2>\n            <div>\n                <input\n                    value={incrementAmount}\n                    onChange={(e) => setIncrementAmount(Number(e.target.value))}\n                    type=&quot;number&quot;\n                />\n                <button\n                    onClick={() => dispatch(incrementByAmount(Number(incrementAmount)))}\n                >\n                    입력값으로 +\n                </button>\n            </div>\n            <div>\n                <button onClick={() => dispatch(decrement())}>-1</button>\n                <button onClick={() => dispatch(increment())}>+1</button>\n            </div>\n        </>\n    );\n};\n\nexport default IndexPage;`, ``)\"\n            >\n              <div\n                class=\"gatsby-code-button\"\n                data-tooltip=\"copy\"\n              >\n                <svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<deckgo-highlight-code language=\"javascript\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">// /src/pages/index.ts\nimport { useState } from &#39;react&#39;;\nimport {\n    useAppDispatch,\n    useAppSelector,\n} from &#39;src/hooks&#39;;\nimport {\n    decrement,\n    increment,\n    incrementByAmount,\n    selectCount,\n} from &#39;src/store/modules/counter/counterSlice&#39;;\n\n\nconst IndexPage: React.FC = () =&gt; {\n    const dispatch = useAppDispatch();\n    const count = useAppSelector(selectCount);\n    const [incrementAmount, setIncrementAmount] = useState&lt;number&gt;(0);\n\n    return (\n        &lt;&gt;\n            &lt;h1&gt;Redux Counter&lt;/h1&gt;\n            &lt;h2&gt;\n                숫자 : {count}\n            &lt;/h2&gt;\n            &lt;div&gt;\n                &lt;input\n                    value={incrementAmount}\n                    onChange={(e) =&gt; setIncrementAmount(Number(e.target.value))}\n                    type=&quot;number&quot;\n                /&gt;\n                &lt;button\n                    onClick={() =&gt; dispatch(incrementByAmount(Number(incrementAmount)))}\n                &gt;\n                    입력값으로 +\n                &lt;/button&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;button onClick={() =&gt; dispatch(decrement())}&gt;-1&lt;/button&gt;\n                &lt;button onClick={() =&gt; dispatch(increment())}&gt;+1&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/&gt;\n    );\n};\n\nexport default IndexPage;</code>\n        </deckgo-highlight-code>","fields":{"slug":"/posts/react 개발일지-3","tagSlugs":["/tag/react/","/tag/nextjs/","/tag/redux/"]},"frontmatter":{"date":"2021-12-17","description":"nextjs , typescript, redux , redux-toolkit 적용(1)","tags":["react","nextjs","redux"],"title":"react 개발일지-(3)","socialImage":{"publicURL":"/static/19697c6372e8ee7cd4727388756495de/gatsby_icon.png"}}}},"pageContext":{"slug":"/posts/react 개발일지-3"}},"staticQueryHashes":["1477167549","251939775","401334301"]}